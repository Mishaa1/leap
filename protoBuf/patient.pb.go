// Code generated by protoc-gen-go. DO NOT EDIT.
// source: patient.proto

package protoBuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Patient_Gender int32

const (
	Patient_MALE   Patient_Gender = 0
	Patient_FEMALE Patient_Gender = 1
	Patient_OTHER  Patient_Gender = 2
)

var Patient_Gender_name = map[int32]string{
	0: "MALE",
	1: "FEMALE",
	2: "OTHER",
}

var Patient_Gender_value = map[string]int32{
	"MALE":   0,
	"FEMALE": 1,
	"OTHER":  2,
}

func (x Patient_Gender) String() string {
	return proto.EnumName(Patient_Gender_name, int32(x))
}

func (Patient_Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_88fb8dc00e3f1504, []int{0, 0}
}

type Patient struct {
	Fname                string         `protobuf:"bytes,1,opt,name=fname,proto3" json:"fname,omitempty"`
	Lname                string         `protobuf:"bytes,2,opt,name=lname,proto3" json:"lname,omitempty"`
	Email                string         `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Age                  int32          `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Gender               Patient_Gender `protobuf:"varint,5,opt,name=gender,proto3,enum=protoBuf.Patient_Gender" json:"gender,omitempty"`
	Weight               float32        `protobuf:"fixed32,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Height               int32          `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Patient) Reset()         { *m = Patient{} }
func (m *Patient) String() string { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()    {}
func (*Patient) Descriptor() ([]byte, []int) {
	return fileDescriptor_88fb8dc00e3f1504, []int{0}
}

func (m *Patient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient.Unmarshal(m, b)
}
func (m *Patient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient.Marshal(b, m, deterministic)
}
func (m *Patient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient.Merge(m, src)
}
func (m *Patient) XXX_Size() int {
	return xxx_messageInfo_Patient.Size(m)
}
func (m *Patient) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient.DiscardUnknown(m)
}

var xxx_messageInfo_Patient proto.InternalMessageInfo

func (m *Patient) GetFname() string {
	if m != nil {
		return m.Fname
	}
	return ""
}

func (m *Patient) GetLname() string {
	if m != nil {
		return m.Lname
	}
	return ""
}

func (m *Patient) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Patient) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Patient) GetGender() Patient_Gender {
	if m != nil {
		return m.Gender
	}
	return Patient_MALE
}

func (m *Patient) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Patient) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("protoBuf.Patient_Gender", Patient_Gender_name, Patient_Gender_value)
	proto.RegisterType((*Patient)(nil), "protoBuf.Patient")
}

func init() { proto.RegisterFile("patient.proto", fileDescriptor_88fb8dc00e3f1504) }

var fileDescriptor_88fb8dc00e3f1504 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8d, 0x4d, 0x4a, 0xc5, 0x30,
	0x14, 0x85, 0x4d, 0xdb, 0xa4, 0xed, 0x05, 0xa5, 0x5c, 0x44, 0x32, 0x0c, 0x1d, 0xc5, 0x49, 0x10,
	0x5d, 0x81, 0x42, 0xd5, 0x81, 0xa2, 0x04, 0x37, 0x10, 0x31, 0xfd, 0x81, 0xfe, 0x51, 0x22, 0x6f,
	0xcf, 0x6f, 0x15, 0x8f, 0x26, 0xe9, 0x28, 0xf7, 0xfb, 0x4e, 0x38, 0x07, 0xae, 0x57, 0xe3, 0x06,
	0x3b, 0x3b, 0xb5, 0x6e, 0x8b, 0x5b, 0xb0, 0xf0, 0xcf, 0xcb, 0x7f, 0x5b, 0x9f, 0x09, 0xe4, 0xdf,
	0x21, 0xc3, 0x5b, 0xa0, 0xed, 0x6c, 0x26, 0xcb, 0x89, 0x20, 0xb2, 0xd4, 0x01, 0x76, 0x3b, 0x7a,
	0x9b, 0x04, 0x3b, 0x1e, 0xd6, 0x4e, 0x66, 0x18, 0x79, 0x1a, 0xac, 0x07, 0xac, 0x20, 0x35, 0x9d,
	0xe5, 0x99, 0x20, 0x92, 0xea, 0xfd, 0xc4, 0x07, 0x60, 0x9d, 0x9d, 0xff, 0xec, 0xc6, 0xa9, 0x20,
	0xf2, 0xe6, 0x91, 0xab, 0x63, 0x5a, 0xc5, 0x59, 0xf5, 0xe6, 0x73, 0x1d, 0xff, 0xe1, 0x1d, 0xb0,
	0x93, 0x1d, 0xba, 0xde, 0x71, 0x26, 0x88, 0x4c, 0x74, 0xa4, 0xdd, 0xf7, 0xc1, 0xe7, 0xbe, 0x3e,
	0x52, 0x7d, 0x0f, 0x2c, 0x34, 0x60, 0x01, 0xd9, 0xe7, 0xf3, 0x47, 0x53, 0x5d, 0x21, 0x00, 0x7b,
	0x6d, 0xfc, 0x4d, 0xb0, 0x04, 0xfa, 0xf5, 0xf3, 0xde, 0xe8, 0x2a, 0xf9, 0x65, 0x7e, 0xfb, 0xe9,
	0x12, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x81, 0x83, 0xa6, 0x0e, 0x01, 0x00, 0x00,
}
