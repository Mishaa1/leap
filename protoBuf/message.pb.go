// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package protoBuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Patient_Gender int32

const (
	Patient_MALE   Patient_Gender = 0
	Patient_FEMALE Patient_Gender = 1
	Patient_OTHER  Patient_Gender = 2
)

var Patient_Gender_name = map[int32]string{
	0: "MALE",
	1: "FEMALE",
	2: "OTHER",
}

var Patient_Gender_value = map[string]int32{
	"MALE":   0,
	"FEMALE": 1,
	"OTHER":  2,
}

func (x Patient_Gender) String() string {
	return proto.EnumName(Patient_Gender_name, int32(x))
}

func (Patient_Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10, 0}
}

// Message sent by a site connector to a coordinator with the intent of registering the site and its available algos
type SiteRegReq struct {
	Id                   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Algos                []*SiteAlgoRegReq `protobuf:"bytes,4,rep,name=algos,proto3" json:"algos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SiteRegReq) Reset()         { *m = SiteRegReq{} }
func (m *SiteRegReq) String() string { return proto.CompactTextString(m) }
func (*SiteRegReq) ProtoMessage()    {}
func (*SiteRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *SiteRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteRegReq.Unmarshal(m, b)
}
func (m *SiteRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteRegReq.Marshal(b, m, deterministic)
}
func (m *SiteRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteRegReq.Merge(m, src)
}
func (m *SiteRegReq) XXX_Size() int {
	return xxx_messageInfo_SiteRegReq.Size(m)
}
func (m *SiteRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_SiteRegReq proto.InternalMessageInfo

func (m *SiteRegReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SiteRegReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SiteRegReq) GetAlgos() []*SiteAlgoRegReq {
	if m != nil {
		return m.Algos
	}
	return nil
}

// Message sent by a site connector to a coordinator indicating an algorithm it wants to register
type SiteAlgoRegReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ProtoVersion         string   `protobuf:"bytes,3,opt,name=protoVersion,proto3" json:"protoVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteAlgoRegReq) Reset()         { *m = SiteAlgoRegReq{} }
func (m *SiteAlgoRegReq) String() string { return proto.CompactTextString(m) }
func (*SiteAlgoRegReq) ProtoMessage()    {}
func (*SiteAlgoRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *SiteAlgoRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteAlgoRegReq.Unmarshal(m, b)
}
func (m *SiteAlgoRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteAlgoRegReq.Marshal(b, m, deterministic)
}
func (m *SiteAlgoRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteAlgoRegReq.Merge(m, src)
}
func (m *SiteAlgoRegReq) XXX_Size() int {
	return xxx_messageInfo_SiteAlgoRegReq.Size(m)
}
func (m *SiteAlgoRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteAlgoRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_SiteAlgoRegReq proto.InternalMessageInfo

func (m *SiteAlgoRegReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SiteAlgoRegReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SiteAlgoRegReq) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

type SiteRegRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteRegRes) Reset()         { *m = SiteRegRes{} }
func (m *SiteRegRes) String() string { return proto.CompactTextString(m) }
func (*SiteRegRes) ProtoMessage()    {}
func (*SiteRegRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *SiteRegRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteRegRes.Unmarshal(m, b)
}
func (m *SiteRegRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteRegRes.Marshal(b, m, deterministic)
}
func (m *SiteRegRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteRegRes.Merge(m, src)
}
func (m *SiteRegRes) XXX_Size() int {
	return xxx_messageInfo_SiteRegRes.Size(m)
}
func (m *SiteRegRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteRegRes.DiscardUnknown(m)
}

var xxx_messageInfo_SiteRegRes proto.InternalMessageInfo

func (m *SiteRegRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SiteRegRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// Message sent by a coordinator to a site connector indicating whether the algorithm registration was successful
type SiteAlgoRegRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteAlgoRegRes) Reset()         { *m = SiteAlgoRegRes{} }
func (m *SiteAlgoRegRes) String() string { return proto.CompactTextString(m) }
func (*SiteAlgoRegRes) ProtoMessage()    {}
func (*SiteAlgoRegRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *SiteAlgoRegRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteAlgoRegRes.Unmarshal(m, b)
}
func (m *SiteAlgoRegRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteAlgoRegRes.Marshal(b, m, deterministic)
}
func (m *SiteAlgoRegRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteAlgoRegRes.Merge(m, src)
}
func (m *SiteAlgoRegRes) XXX_Size() int {
	return xxx_messageInfo_SiteAlgoRegRes.Size(m)
}
func (m *SiteAlgoRegRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteAlgoRegRes.DiscardUnknown(m)
}

var xxx_messageInfo_SiteAlgoRegRes proto.InternalMessageInfo

func (m *SiteAlgoRegRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SiteAlgoRegRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// Message sent by a cloud algorithm to a coordinator indicating this algorithm should be registered
type CloudAlgoRegReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ProtoVersion         string   `protobuf:"bytes,3,opt,name=proto_version,json=protoVersion,proto3" json:"proto_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudAlgoRegReq) Reset()         { *m = CloudAlgoRegReq{} }
func (m *CloudAlgoRegReq) String() string { return proto.CompactTextString(m) }
func (*CloudAlgoRegReq) ProtoMessage()    {}
func (*CloudAlgoRegReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *CloudAlgoRegReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudAlgoRegReq.Unmarshal(m, b)
}
func (m *CloudAlgoRegReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudAlgoRegReq.Marshal(b, m, deterministic)
}
func (m *CloudAlgoRegReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudAlgoRegReq.Merge(m, src)
}
func (m *CloudAlgoRegReq) XXX_Size() int {
	return xxx_messageInfo_CloudAlgoRegReq.Size(m)
}
func (m *CloudAlgoRegReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudAlgoRegReq.DiscardUnknown(m)
}

var xxx_messageInfo_CloudAlgoRegReq proto.InternalMessageInfo

func (m *CloudAlgoRegReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CloudAlgoRegReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CloudAlgoRegReq) GetProtoVersion() string {
	if m != nil {
		return m.ProtoVersion
	}
	return ""
}

// Message sent by a coordinator to a cloud algorithm indicating whether the algorithm registration was successful
type CloudAlgoRegRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudAlgoRegRes) Reset()         { *m = CloudAlgoRegRes{} }
func (m *CloudAlgoRegRes) String() string { return proto.CompactTextString(m) }
func (*CloudAlgoRegRes) ProtoMessage()    {}
func (*CloudAlgoRegRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

func (m *CloudAlgoRegRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudAlgoRegRes.Unmarshal(m, b)
}
func (m *CloudAlgoRegRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudAlgoRegRes.Marshal(b, m, deterministic)
}
func (m *CloudAlgoRegRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudAlgoRegRes.Merge(m, src)
}
func (m *CloudAlgoRegRes) XXX_Size() int {
	return xxx_messageInfo_CloudAlgoRegRes.Size(m)
}
func (m *CloudAlgoRegRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudAlgoRegRes.DiscardUnknown(m)
}

var xxx_messageInfo_CloudAlgoRegRes proto.InternalMessageInfo

func (m *CloudAlgoRegRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CloudAlgoRegRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// Message relayed by an algo to coordinator and site-connector that contains the query to be performed and algo id
type ComputeRequest struct {
	AlgoId               int32    `protobuf:"varint,1,opt,name=algo_id,json=algoId,proto3" json:"algo_id,omitempty"`
	Query                *Query   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeRequest) Reset()         { *m = ComputeRequest{} }
func (m *ComputeRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeRequest) ProtoMessage()    {}
func (*ComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

func (m *ComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeRequest.Unmarshal(m, b)
}
func (m *ComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeRequest.Marshal(b, m, deterministic)
}
func (m *ComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeRequest.Merge(m, src)
}
func (m *ComputeRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeRequest.Size(m)
}
func (m *ComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeRequest proto.InternalMessageInfo

func (m *ComputeRequest) GetAlgoId() int32 {
	if m != nil {
		return m.AlgoId
	}
	return 0
}

func (m *ComputeRequest) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

// Simple example query
type Query struct {
	Operator             string   `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Field                string   `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	StringValue          string   `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	NumericValue         int32    `protobuf:"varint,4,opt,name=numeric_value,json=numericValue,proto3" json:"numeric_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *Query) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Query) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Query) GetNumericValue() int32 {
	if m != nil {
		return m.NumericValue
	}
	return 0
}

type ComputeResponse struct {
	Response             int32    `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeResponse) Reset()         { *m = ComputeResponse{} }
func (m *ComputeResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeResponse) ProtoMessage()    {}
func (*ComputeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

func (m *ComputeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeResponse.Unmarshal(m, b)
}
func (m *ComputeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeResponse.Marshal(b, m, deterministic)
}
func (m *ComputeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeResponse.Merge(m, src)
}
func (m *ComputeResponse) XXX_Size() int {
	return xxx_messageInfo_ComputeResponse.Size(m)
}
func (m *ComputeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeResponse proto.InternalMessageInfo

func (m *ComputeResponse) GetResponse() int32 {
	if m != nil {
		return m.Response
	}
	return 0
}

type ComputeResponses struct {
	Responses            []*ComputeResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ComputeResponses) Reset()         { *m = ComputeResponses{} }
func (m *ComputeResponses) String() string { return proto.CompactTextString(m) }
func (*ComputeResponses) ProtoMessage()    {}
func (*ComputeResponses) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

func (m *ComputeResponses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeResponses.Unmarshal(m, b)
}
func (m *ComputeResponses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeResponses.Marshal(b, m, deterministic)
}
func (m *ComputeResponses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeResponses.Merge(m, src)
}
func (m *ComputeResponses) XXX_Size() int {
	return xxx_messageInfo_ComputeResponses.Size(m)
}
func (m *ComputeResponses) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeResponses.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeResponses proto.InternalMessageInfo

func (m *ComputeResponses) GetResponses() []*ComputeResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

type Patient struct {
	FirstName            string         `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string         `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string         `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Age                  int32          `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Gender               Patient_Gender `protobuf:"varint,5,opt,name=gender,proto3,enum=protoBuf.Patient_Gender" json:"gender,omitempty"`
	Weight               float32        `protobuf:"fixed32,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Height               int32          `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Patient) Reset()         { *m = Patient{} }
func (m *Patient) String() string { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()    {}
func (*Patient) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

func (m *Patient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient.Unmarshal(m, b)
}
func (m *Patient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient.Marshal(b, m, deterministic)
}
func (m *Patient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient.Merge(m, src)
}
func (m *Patient) XXX_Size() int {
	return xxx_messageInfo_Patient.Size(m)
}
func (m *Patient) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient.DiscardUnknown(m)
}

var xxx_messageInfo_Patient proto.InternalMessageInfo

func (m *Patient) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Patient) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Patient) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Patient) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Patient) GetGender() Patient_Gender {
	if m != nil {
		return m.Gender
	}
	return Patient_MALE
}

func (m *Patient) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Patient) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("protoBuf.Patient_Gender", Patient_Gender_name, Patient_Gender_value)
	proto.RegisterType((*SiteRegReq)(nil), "protoBuf.SiteRegReq")
	proto.RegisterType((*SiteAlgoRegReq)(nil), "protoBuf.SiteAlgoRegReq")
	proto.RegisterType((*SiteRegRes)(nil), "protoBuf.SiteRegRes")
	proto.RegisterType((*SiteAlgoRegRes)(nil), "protoBuf.SiteAlgoRegRes")
	proto.RegisterType((*CloudAlgoRegReq)(nil), "protoBuf.CloudAlgoRegReq")
	proto.RegisterType((*CloudAlgoRegRes)(nil), "protoBuf.CloudAlgoRegRes")
	proto.RegisterType((*ComputeRequest)(nil), "protoBuf.ComputeRequest")
	proto.RegisterType((*Query)(nil), "protoBuf.Query")
	proto.RegisterType((*ComputeResponse)(nil), "protoBuf.ComputeResponse")
	proto.RegisterType((*ComputeResponses)(nil), "protoBuf.ComputeResponses")
	proto.RegisterType((*Patient)(nil), "protoBuf.Patient")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 634 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdf, 0x8f, 0xd2, 0x40,
	0x10, 0xa6, 0x1c, 0x2d, 0x30, 0xdc, 0x01, 0x6e, 0x2e, 0x5a, 0x31, 0x26, 0xb8, 0xc6, 0x04, 0x1f,
	0x24, 0x06, 0x1f, 0xf4, 0x41, 0x1f, 0x4e, 0x44, 0xcf, 0x9c, 0x3f, 0xce, 0xd5, 0xdc, 0x8b, 0x26,
	0x58, 0xe9, 0xd0, 0xdb, 0xa4, 0x74, 0xb9, 0xdd, 0xf6, 0x8c, 0x8f, 0xfe, 0x33, 0xfe, 0x91, 0x3e,
	0x99, 0xdd, 0x6d, 0xb9, 0x82, 0x62, 0xbc, 0xf8, 0xc4, 0xcc, 0xf7, 0x4d, 0x67, 0xe6, 0x9b, 0xd9,
	0x01, 0xf6, 0x16, 0xa8, 0x54, 0x10, 0xe1, 0x70, 0x29, 0x45, 0x2a, 0x48, 0xc3, 0xfc, 0x3c, 0xcd,
	0xe6, 0xf4, 0x33, 0xc0, 0x7b, 0x9e, 0x22, 0xc3, 0x88, 0xe1, 0x19, 0x69, 0x43, 0x95, 0x87, 0xbe,
	0xd3, 0x77, 0x06, 0x2e, 0xab, 0xf2, 0x90, 0x10, 0xa8, 0x25, 0xc1, 0x02, 0xfd, 0x6a, 0xdf, 0x19,
	0x34, 0x99, 0xb1, 0xc9, 0x10, 0xdc, 0x20, 0x8e, 0x84, 0xf2, 0x6b, 0xfd, 0x9d, 0x41, 0x6b, 0xe4,
	0x0f, 0x8b, 0x5c, 0x43, 0x9d, 0xe8, 0x20, 0x8e, 0x84, 0x4d, 0xc6, 0x6c, 0x18, 0x9d, 0x43, 0x7b,
	0x9d, 0xf8, 0xad, 0x4a, 0x1f, 0x5a, 0x21, 0xaa, 0x99, 0xe4, 0xcb, 0x94, 0x8b, 0x24, 0x2f, 0x56,
	0x86, 0x08, 0x85, 0x5d, 0x53, 0xe5, 0x04, 0xa5, 0xd2, 0x21, 0x3b, 0x26, 0x64, 0x0d, 0xa3, 0x8f,
	0x4a, 0x4a, 0x14, 0xf1, 0xa1, 0xae, 0xb2, 0xd9, 0x0c, 0x95, 0x32, 0x85, 0x1a, 0xac, 0x70, 0x49,
	0x17, 0x76, 0x16, 0x2a, 0xca, 0xab, 0x68, 0x93, 0x3e, 0xde, 0xe8, 0xf0, 0x72, 0x5f, 0x9f, 0x42,
	0x67, 0x1c, 0x8b, 0x2c, 0xfc, 0x2f, 0x81, 0xb7, 0x61, 0xcf, 0x88, 0x99, 0x9e, 0xff, 0x45, 0xe1,
	0x93, 0xcd, 0x4a, 0x97, 0x6b, 0xf4, 0x18, 0xda, 0x63, 0xb1, 0x58, 0x66, 0x7a, 0x46, 0x67, 0x19,
	0xaa, 0x94, 0x5c, 0x83, 0xba, 0xde, 0xd1, 0x74, 0xd5, 0xac, 0xa7, 0xdd, 0x97, 0x21, 0xb9, 0x03,
	0xee, 0x59, 0x86, 0xf2, 0x9b, 0xf9, 0xbc, 0x35, 0xea, 0x5c, 0xec, 0xf8, 0x9d, 0x86, 0x99, 0x65,
	0xe9, 0x77, 0x07, 0x5c, 0x03, 0x90, 0x1e, 0x34, 0xc4, 0x12, 0x65, 0x90, 0x0a, 0x69, 0x52, 0x35,
	0xd9, 0xca, 0x27, 0xfb, 0xe0, 0xce, 0x39, 0xc6, 0x61, 0xde, 0x8b, 0x75, 0xc8, 0x2d, 0xd8, 0x55,
	0xa9, 0xe4, 0x49, 0x34, 0x3d, 0x0f, 0xe2, 0x0c, 0x73, 0xc1, 0x2d, 0x8b, 0x9d, 0x68, 0x48, 0x0f,
	0x25, 0xc9, 0x16, 0x28, 0xf9, 0x2c, 0x8f, 0xa9, 0x99, 0x26, 0x77, 0x73, 0xd0, 0x04, 0xd1, 0x7b,
	0xd0, 0x59, 0xa9, 0x52, 0x4b, 0x91, 0x28, 0xd4, 0xcd, 0xc8, 0xdc, 0xce, 0x75, 0xad, 0x7c, 0x7a,
	0x04, 0xdd, 0x8d, 0x70, 0x45, 0x1e, 0x42, 0xb3, 0xe0, 0xf5, 0x18, 0xf5, 0xab, 0xbe, 0x7e, 0xa1,
	0x78, 0x23, 0x9c, 0x5d, 0xc4, 0xd2, 0x9f, 0x0e, 0xd4, 0x8f, 0x83, 0x94, 0x63, 0x92, 0x92, 0x9b,
	0x00, 0x73, 0x2e, 0x55, 0x3a, 0x35, 0x07, 0x63, 0x67, 0xd0, 0x34, 0xc8, 0x1b, 0x7d, 0x35, 0x37,
	0xa0, 0x19, 0x07, 0x05, 0x6b, 0x07, 0xd1, 0xd0, 0x80, 0x21, 0xf7, 0xc1, 0xc5, 0x45, 0xc0, 0xe3,
	0x7c, 0x08, 0xd6, 0xd1, 0x1b, 0x0c, 0xa2, 0x42, 0xb4, 0x36, 0xc9, 0x7d, 0xf0, 0x22, 0x4c, 0x42,
	0x94, 0xbe, 0xdb, 0x77, 0x06, 0xed, 0xf2, 0xed, 0xe5, 0x6d, 0x0c, 0x5f, 0x18, 0x9e, 0xe5, 0x71,
	0xe4, 0x2a, 0x78, 0x5f, 0x91, 0x47, 0xa7, 0xa9, 0xef, 0xf5, 0x9d, 0x41, 0x95, 0xe5, 0x9e, 0xc6,
	0x4f, 0x2d, 0x5e, 0xb7, 0x8b, 0xb7, 0x1e, 0xbd, 0x0b, 0x9e, 0xcd, 0x40, 0x1a, 0x50, 0x7b, 0x7d,
	0xf0, 0x6a, 0xd2, 0xad, 0x10, 0x00, 0xef, 0xf9, 0xc4, 0xd8, 0x0e, 0x69, 0x82, 0xfb, 0xf6, 0xc3,
	0xe1, 0x84, 0x75, 0xab, 0xa3, 0x8f, 0xd0, 0xd1, 0x57, 0x33, 0x16, 0x42, 0x86, 0x3c, 0x31, 0x9b,
	0x3e, 0x84, 0x2e, 0xc3, 0x88, 0xab, 0x14, 0x65, 0x71, 0x50, 0x64, 0xeb, 0xff, 0x43, 0x6f, 0x1b,
	0xa3, 0x68, 0x65, 0xf4, 0xc3, 0x81, 0xae, 0x79, 0xeb, 0xe5, 0xf4, 0x47, 0x70, 0xa5, 0x48, 0xbf,
	0xba, 0x03, 0x52, 0xde, 0xd4, 0xfa, 0x19, 0xf6, 0xb6, 0x52, 0x8a, 0x56, 0xc8, 0x04, 0x5a, 0xd6,
	0xb7, 0xa7, 0xe0, 0xff, 0x61, 0xe1, 0x86, 0xe9, 0xf5, 0xb6, 0x3e, 0x05, 0xdd, 0x68, 0x07, 0xf6,
	0x74, 0x9a, 0xb1, 0x48, 0x12, 0x9c, 0xa5, 0x42, 0x8e, 0x3e, 0xc1, 0x7e, 0xa9, 0xe7, 0x15, 0x4e,
	0x9e, 0xfd, 0x6b, 0xbd, 0xed, 0x4f, 0x8f, 0x56, 0xbe, 0x78, 0x86, 0x7b, 0xf0, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0x8d, 0x75, 0x96, 0x6c, 0xd0, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SiteCoordinatorClient is the client API for SiteCoordinator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SiteCoordinatorClient interface {
	RegisterSiteAlgo(ctx context.Context, in *SiteAlgoRegReq, opts ...grpc.CallOption) (*SiteAlgoRegRes, error)
}

type siteCoordinatorClient struct {
	cc *grpc.ClientConn
}

func NewSiteCoordinatorClient(cc *grpc.ClientConn) SiteCoordinatorClient {
	return &siteCoordinatorClient{cc}
}

func (c *siteCoordinatorClient) RegisterSiteAlgo(ctx context.Context, in *SiteAlgoRegReq, opts ...grpc.CallOption) (*SiteAlgoRegRes, error) {
	out := new(SiteAlgoRegRes)
	err := c.cc.Invoke(ctx, "/protoBuf.SiteCoordinator/RegisterSiteAlgo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SiteCoordinatorServer is the server API for SiteCoordinator service.
type SiteCoordinatorServer interface {
	RegisterSiteAlgo(context.Context, *SiteAlgoRegReq) (*SiteAlgoRegRes, error)
}

// UnimplementedSiteCoordinatorServer can be embedded to have forward compatible implementations.
type UnimplementedSiteCoordinatorServer struct {
}

func (*UnimplementedSiteCoordinatorServer) RegisterSiteAlgo(ctx context.Context, req *SiteAlgoRegReq) (*SiteAlgoRegRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterSiteAlgo not implemented")
}

func RegisterSiteCoordinatorServer(s *grpc.Server, srv SiteCoordinatorServer) {
	s.RegisterService(&_SiteCoordinator_serviceDesc, srv)
}

func _SiteCoordinator_RegisterSiteAlgo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SiteAlgoRegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SiteCoordinatorServer).RegisterSiteAlgo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBuf.SiteCoordinator/RegisterSiteAlgo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SiteCoordinatorServer).RegisterSiteAlgo(ctx, req.(*SiteAlgoRegReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SiteCoordinator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoBuf.SiteCoordinator",
	HandlerType: (*SiteCoordinatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterSiteAlgo",
			Handler:    _SiteCoordinator_RegisterSiteAlgo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

// CloudCoordinatorClient is the client API for CloudCoordinator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudCoordinatorClient interface {
	RegisterCloudAlgo(ctx context.Context, in *CloudAlgoRegReq, opts ...grpc.CallOption) (*CloudAlgoRegRes, error)
	AlgoRequest(ctx context.Context, in *ComputeRequest, opts ...grpc.CallOption) (*ComputeResponses, error)
}

type cloudCoordinatorClient struct {
	cc *grpc.ClientConn
}

func NewCloudCoordinatorClient(cc *grpc.ClientConn) CloudCoordinatorClient {
	return &cloudCoordinatorClient{cc}
}

func (c *cloudCoordinatorClient) RegisterCloudAlgo(ctx context.Context, in *CloudAlgoRegReq, opts ...grpc.CallOption) (*CloudAlgoRegRes, error) {
	out := new(CloudAlgoRegRes)
	err := c.cc.Invoke(ctx, "/protoBuf.CloudCoordinator/RegisterCloudAlgo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudCoordinatorClient) AlgoRequest(ctx context.Context, in *ComputeRequest, opts ...grpc.CallOption) (*ComputeResponses, error) {
	out := new(ComputeResponses)
	err := c.cc.Invoke(ctx, "/protoBuf.CloudCoordinator/AlgoRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudCoordinatorServer is the server API for CloudCoordinator service.
type CloudCoordinatorServer interface {
	RegisterCloudAlgo(context.Context, *CloudAlgoRegReq) (*CloudAlgoRegRes, error)
	AlgoRequest(context.Context, *ComputeRequest) (*ComputeResponses, error)
}

// UnimplementedCloudCoordinatorServer can be embedded to have forward compatible implementations.
type UnimplementedCloudCoordinatorServer struct {
}

func (*UnimplementedCloudCoordinatorServer) RegisterCloudAlgo(ctx context.Context, req *CloudAlgoRegReq) (*CloudAlgoRegRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterCloudAlgo not implemented")
}
func (*UnimplementedCloudCoordinatorServer) AlgoRequest(ctx context.Context, req *ComputeRequest) (*ComputeResponses, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlgoRequest not implemented")
}

func RegisterCloudCoordinatorServer(s *grpc.Server, srv CloudCoordinatorServer) {
	s.RegisterService(&_CloudCoordinator_serviceDesc, srv)
}

func _CloudCoordinator_RegisterCloudAlgo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudAlgoRegReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudCoordinatorServer).RegisterCloudAlgo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBuf.CloudCoordinator/RegisterCloudAlgo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudCoordinatorServer).RegisterCloudAlgo(ctx, req.(*CloudAlgoRegReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudCoordinator_AlgoRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudCoordinatorServer).AlgoRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBuf.CloudCoordinator/AlgoRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudCoordinatorServer).AlgoRequest(ctx, req.(*ComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudCoordinator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoBuf.CloudCoordinator",
	HandlerType: (*CloudCoordinatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterCloudAlgo",
			Handler:    _CloudCoordinator_RegisterCloudAlgo_Handler,
		},
		{
			MethodName: "AlgoRequest",
			Handler:    _CloudCoordinator_AlgoRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

// AlgoConnectorClient is the client API for AlgoConnector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlgoConnectorClient interface {
}

type algoConnectorClient struct {
	cc *grpc.ClientConn
}

func NewAlgoConnectorClient(cc *grpc.ClientConn) AlgoConnectorClient {
	return &algoConnectorClient{cc}
}

// AlgoConnectorServer is the server API for AlgoConnector service.
type AlgoConnectorServer interface {
}

// UnimplementedAlgoConnectorServer can be embedded to have forward compatible implementations.
type UnimplementedAlgoConnectorServer struct {
}

func RegisterAlgoConnectorServer(s *grpc.Server, srv AlgoConnectorServer) {
	s.RegisterService(&_AlgoConnector_serviceDesc, srv)
}

var _AlgoConnector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoBuf.AlgoConnector",
	HandlerType: (*AlgoConnectorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "message.proto",
}

// CoordinatorConnectorClient is the client API for CoordinatorConnector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoordinatorConnectorClient interface {
	AlgoRequest(ctx context.Context, in *ComputeRequest, opts ...grpc.CallOption) (*ComputeResponse, error)
}

type coordinatorConnectorClient struct {
	cc *grpc.ClientConn
}

func NewCoordinatorConnectorClient(cc *grpc.ClientConn) CoordinatorConnectorClient {
	return &coordinatorConnectorClient{cc}
}

func (c *coordinatorConnectorClient) AlgoRequest(ctx context.Context, in *ComputeRequest, opts ...grpc.CallOption) (*ComputeResponse, error) {
	out := new(ComputeResponse)
	err := c.cc.Invoke(ctx, "/protoBuf.CoordinatorConnector/AlgoRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoordinatorConnectorServer is the server API for CoordinatorConnector service.
type CoordinatorConnectorServer interface {
	AlgoRequest(context.Context, *ComputeRequest) (*ComputeResponse, error)
}

// UnimplementedCoordinatorConnectorServer can be embedded to have forward compatible implementations.
type UnimplementedCoordinatorConnectorServer struct {
}

func (*UnimplementedCoordinatorConnectorServer) AlgoRequest(ctx context.Context, req *ComputeRequest) (*ComputeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlgoRequest not implemented")
}

func RegisterCoordinatorConnectorServer(s *grpc.Server, srv CoordinatorConnectorServer) {
	s.RegisterService(&_CoordinatorConnector_serviceDesc, srv)
}

func _CoordinatorConnector_AlgoRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordinatorConnectorServer).AlgoRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBuf.CoordinatorConnector/AlgoRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordinatorConnectorServer).AlgoRequest(ctx, req.(*ComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoordinatorConnector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoBuf.CoordinatorConnector",
	HandlerType: (*CoordinatorConnectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AlgoRequest",
			Handler:    _CoordinatorConnector_AlgoRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
