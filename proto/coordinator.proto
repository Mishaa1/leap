syntax = "proto3";
package proto;
option go_package=".;proto";

import "proto/computation-msgs.proto";
import "proto/registration-msgs.proto";
import "proto/availability-msgs.proto";
import "proto/user-msgs.proto";
import "proto/selector-verification-msgs.proto";

// RPC service at the coordinator that will handle requests from sites and cloud algos
service Coordinator {

    // Registers an algorithm from a site at the coordinator
    rpc RegisterSite (SiteRegReq) returns (SiteRegRes) {}

    // Relays a computation request from the cloud to appropriate sites
    //rpc Map (MapRequest) returns (MapResponses) {}
    rpc Map (stream MapRequestChunk) returns (stream MapResponsesChunk) {}

    // Pinged by others to determine what sites are available
    rpc SitesAvailable (SitesAvailableReq) returns (SitesAvailableRes) {}

    // Sends a request to all sites to verify the selector
    rpc VerifySelector (SelectorVerificationsReq) returns (SelectorVerificationsRes) {}

    // Sends computation request to cloud algo
    rpc Compute (ComputeRequest) returns (ComputeResponse) {}

    // Registers a user with the coordinator
    rpc RegisterUser (UserRegReq) returns (UserRegRes) {}

    // Authenticates a user with the coordinator
    rpc AuthUser (UserAuthReq) returns (UserAuthRes) {}

}
