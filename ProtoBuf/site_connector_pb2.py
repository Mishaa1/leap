# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: site-connector.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import computation_pb2 as computation__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='site-connector.proto',
  package='protoBuf',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x14site-connector.proto\x12\x08protoBuf\x1a\x11\x63omputation.proto2\x0f\n\rAlgoConnector2X\n\x14\x43oordinatorConnector\x12@\n\x07\x43ompute\x12\x18.protoBuf.ComputeRequest\x1a\x19.protoBuf.ComputeResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[computation__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_ALGOCONNECTOR = _descriptor.ServiceDescriptor(
  name='AlgoConnector',
  full_name='protoBuf.AlgoConnector',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=53,
  serialized_end=68,
  methods=[
])
_sym_db.RegisterServiceDescriptor(_ALGOCONNECTOR)

DESCRIPTOR.services_by_name['AlgoConnector'] = _ALGOCONNECTOR


_COORDINATORCONNECTOR = _descriptor.ServiceDescriptor(
  name='CoordinatorConnector',
  full_name='protoBuf.CoordinatorConnector',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  serialized_start=70,
  serialized_end=158,
  methods=[
  _descriptor.MethodDescriptor(
    name='Compute',
    full_name='protoBuf.CoordinatorConnector.Compute',
    index=0,
    containing_service=None,
    input_type=computation__pb2._COMPUTEREQUEST,
    output_type=computation__pb2._COMPUTERESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COORDINATORCONNECTOR)

DESCRIPTOR.services_by_name['CoordinatorConnector'] = _COORDINATORCONNECTOR

# @@protoc_insertion_point(module_scope)
