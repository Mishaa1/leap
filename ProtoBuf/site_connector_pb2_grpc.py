# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import computation_msgs_pb2 as computation__msgs__pb2


class AlgoConnectorStub(object):
  """To compile the protobuf to Go run the following inside the protoBuf folder:
  protoc -I=. --go_out=plugins=grpc:.  site-connector.proto

  To compile the protobuf to Python run the following inside the protoBuf folder:
  python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. site-connector.proto

  RPC service at a site connector that will handle requests from site algorithms
  rpc RegisterAlgo (SiteAlgoRegReq) returns (SiteAlgoRegRes) {}
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """


class AlgoConnectorServicer(object):
  """To compile the protobuf to Go run the following inside the protoBuf folder:
  protoc -I=. --go_out=plugins=grpc:.  site-connector.proto

  To compile the protobuf to Python run the following inside the protoBuf folder:
  python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. site-connector.proto

  RPC service at a site connector that will handle requests from site algorithms
  rpc RegisterAlgo (SiteAlgoRegReq) returns (SiteAlgoRegRes) {}
  """


def add_AlgoConnectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protoBuf.AlgoConnector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CoordinatorConnectorStub(object):
  """RPC service at a site connector that will handle requests from coordinator
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/protoBuf.CoordinatorConnector/Compute',
        request_serializer=computation__msgs__pb2.ComputeRequest.SerializeToString,
        response_deserializer=computation__msgs__pb2.ComputeResponse.FromString,
        )


class CoordinatorConnectorServicer(object):
  """RPC service at a site connector that will handle requests from coordinator
  """

  def Compute(self, request, context):
    """// Relays a computation request from the coordinato to appropriate algorithm in site
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CoordinatorConnectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=computation__msgs__pb2.ComputeRequest.FromString,
          response_serializer=computation__msgs__pb2.ComputeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protoBuf.CoordinatorConnector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
