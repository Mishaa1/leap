syntax = "proto3";
package protoBuf;
import "computation.proto";

// To compile the protobuf to Go run the following inside the protoBuf folder:
// protoc -I=. --go_out=plugins=grpc:.  coordinator.proto

// To compile the protobuf to Python run the following inside the protoBuf folder:
// python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. coordinator.proto

// RPC SERVICES
// RPC service at the coordinator that will handle requests from sites
service SiteCoordinator {
    rpc RegisterAlgo (SiteAlgoRegReq) returns (SiteAlgoRegRes) {}
}

// RPC service at the coordinator that will handle requests from cloud algorithms
service CloudCoordinator {
    rpc RegisterAlgo (CloudAlgoRegReq) returns (CloudAlgoRegRes) {}
    rpc Compute (ComputeRequest) returns (ComputeResponses) {}
}

// Message sent by a site connector to a coordinator indicating an algorithm it wants to register
message SiteAlgoRegReq { // Site Algorithm Registration Request
                         int32 id = 1;
                         string description = 2;
                         string protoVersion = 3;
}

// Message sent by a coordinator to a site connector indicating whether the algorithm registration was successful
message SiteAlgoRegRes { // Site Algorithm Registration Response
                         bool success = 1;
                         string msg = 2;
}

// Message sent by a cloud algorithm to a coordinator indicating this algorithm should be registered
message CloudAlgoRegReq { // Cloud Algorithm Registration Request
                          int32 id = 1;
                          string description = 2;
                          string proto_version = 3;
}

// Message sent by a coordinator to a cloud algorithm indicating whether the algorithm registration was successful
message CloudAlgoRegRes { // Cloud Algorithm Registration Response
                          bool success = 1;
                          string msg = 2;
}