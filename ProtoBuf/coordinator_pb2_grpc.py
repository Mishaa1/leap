# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import computation_msgs_pb2 as computation__msgs__pb2
import registration_msgs_pb2 as registration__msgs__pb2


class SiteCoordinatorStub(object):
  """To compile the protobuf to Go run the following inside the protoBuf folder:
  protoc -I=. --go_out=plugins=grpc:.  coordinator.proto

  To compile the protobuf to Python run the following inside the protoBuf folder:
  python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. coordinator.proto

  RPC service at the coordinator that will handle requests from sites
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterAlgo = channel.unary_unary(
        '/protoBuf.SiteCoordinator/RegisterAlgo',
        request_serializer=registration__msgs__pb2.SiteAlgoRegReq.SerializeToString,
        response_deserializer=registration__msgs__pb2.SiteAlgoRegRes.FromString,
        )


class SiteCoordinatorServicer(object):
  """To compile the protobuf to Go run the following inside the protoBuf folder:
  protoc -I=. --go_out=plugins=grpc:.  coordinator.proto

  To compile the protobuf to Python run the following inside the protoBuf folder:
  python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. coordinator.proto

  RPC service at the coordinator that will handle requests from sites
  """

  def RegisterAlgo(self, request, context):
    """Registers an algorithm from a site at the coordinator
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SiteCoordinatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterAlgo': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterAlgo,
          request_deserializer=registration__msgs__pb2.SiteAlgoRegReq.FromString,
          response_serializer=registration__msgs__pb2.SiteAlgoRegRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protoBuf.SiteCoordinator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CloudCoordinatorStub(object):
  """RPC service at the coordinator that will handle requests from cloud algorithms
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterAlgo = channel.unary_unary(
        '/protoBuf.CloudCoordinator/RegisterAlgo',
        request_serializer=registration__msgs__pb2.CloudAlgoRegReq.SerializeToString,
        response_deserializer=registration__msgs__pb2.CloudAlgoRegRes.FromString,
        )
    self.Compute = channel.unary_unary(
        '/protoBuf.CloudCoordinator/Compute',
        request_serializer=computation__msgs__pb2.ComputeRequest.SerializeToString,
        response_deserializer=computation__msgs__pb2.ComputeResponses.FromString,
        )


class CloudCoordinatorServicer(object):
  """RPC service at the coordinator that will handle requests from cloud algorithms
  """

  def RegisterAlgo(self, request, context):
    """Registers an algorithm from the cloud at the coordinator
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Compute(self, request, context):
    """Relays a computation request from the cloud to appropriate sites
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CloudCoordinatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterAlgo': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterAlgo,
          request_deserializer=registration__msgs__pb2.CloudAlgoRegReq.FromString,
          response_serializer=registration__msgs__pb2.CloudAlgoRegRes.SerializeToString,
      ),
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=computation__msgs__pb2.ComputeRequest.FromString,
          response_serializer=computation__msgs__pb2.ComputeResponses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protoBuf.CloudCoordinator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
